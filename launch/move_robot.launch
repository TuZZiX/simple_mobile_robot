<?xml version="1.0" encoding="utf-8"?>
<launch>
	<arg name="move_type" default="keyboard" doc="Select way to control the mobile robot,
		option:
		[keyboard] - control the robot by arrow key
		[square] - run a square path, specify the side length by extra argment [length], e.g. [length:=3.0]
		[circle] - run a circular path, specify the diameter by extra argment [length], e.g. [length:=3.0]"/>
	<arg name="length" default="3.0" doc="Length of the path when move the robot in square or circle mode, see move_type defination for detail"/>

	<!-- Start world with starting_pen -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find simple_mobile_robot)/worlds/robot_in_pen.world"/>
	</include>

	<!-- Convert xacro model file and put on parameter server -->
	<param name="robot_description" command="$(find xacro)/xacro.py --inorder '$(find simple_mobile_robot)/urdf/mobile_robot.xacro'" />

	<!-- Spawn the robot from parameter server into Gazebo -->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model mobile_robot" />

	<!-- Start a robot_state_publisher -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

	<!-- launch rviz using a specific config file -->
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find simple_mobile_robot)/rviz/robot_w_map.rviz"/>

	<node name="map_server" pkg= "map_server" type= "map_server" args="$(find simple_mobile_robot)/map/pen.yaml" output="screen"/>

	<node pkg="amcl" type="amcl" name="amcl" output="screen"/>

  <!-- Spawn controllers -->
  <!-- <rosparam file="$(find simple_mobile_robot)/config/controller.yaml" command="load" /> -->
  <!-- <node name="joint_publisher_spawner" pkg="controller_manager" type="spawner" args="joint_publisher" respawn="false" output="screen" /> -->
	<!-- <node name="velocity_controller_spawner" pkg="controller_manager" type="spawner" args="velocity_controller" respawn="false" output="screen" /> -->

  <!-- interactive marker -->
  <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen"/>

  <node pkg="twist_mux" type="twist_mux" name="twist_mux">
    <rosparam command="load" file="$(find simple_mobile_robot)/config/cmd_vel_mux.yaml" />
    <remap from="cmd_vel_out" to="cmd_vel"/>
  </node>

</launch>
